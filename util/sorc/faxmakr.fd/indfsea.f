      SUBROUTINE INDFSEA(FLDIN,IDIM,JDIM,NDIV,IBIG,JBIG,XINDEF)
C$$$  SUBPROGRAM DOCUMENTATION BLOCK
C                .      .    .                                       .
C SUBPROGRAM:    INDFSEA     TO INDEF THE OCEAN AREA BY A LAND-SEA FLD
C   PRGMMR: KRISHNA KUMAR       ORG: W/NP12    DATE: 1999-08-01
C
C ABSTRACT: TO INDEF THE OCEAN AREA BY A LAND-SEA FLD.
C
C PROGRAM HISTORY LOG:
C   97-04-22  LUKE LIN    
C 1999-08-01  KRISHNA KUMAR CONVERTED THIS CODE FROM CRAY TO IBM
C                           RS/6000. ADDED A BLOCK DATA. 
C
C USAGE:    CALL INDFSEA(FLDIN,IDIM,JDIM,NDIV,IBIG,JBIG,XINDEF)
C   INPUT ARGUMENTS:
C     FLDIN    - REAL*4  BIGFLD(IBIG,JBIG)
C     IBIG   - I-DIMENSION OF BIGFLD.
C     JBIG   - J-DIMENSION OF BIGFLD.
C     IDIM   - I-DIMENSION OF THE ORIGINAL  SMLFLD.
C     JDIM   - J-DIMENSION OF THE ORIGINAL  SMLFLD.
C
C   OUTPUT ARGUMENT LIST:
C     FLDIN    - REAL*4  BIGFLD(IBIG,JBIG)
C
C REMARKS:
C
C ATTRIBUTES:
C   LANGUAGE: F90
C   MACHINE:  IBM
C
C$$$
C
C     *     *     *     *     *     *     *     *     *     *     *
C
      COMMON/SEA/ SAN(53,57)
      INTEGER    SAN
C     INTEGER    XAN(53,57)
C     INTEGER    ZAN(53,57)
C
      INTEGER    LAN(209,225)
C     INTEGER    LAN(31,21)
C
      REAL       FLDIN(IBIG,JBIG)
      REAL       XINDEF
C
C     DATA       ISKIP  /15/
C     DATA       JSKIP  / 8/
C     DATA       ISKIP  /16/
C     DATA       JSKIP  / 7/
C     DATA  XINDEF   /-1.0E2465 /
      DATA  LAN 
     1  /209*0,209*0,209*0,209*0,209*0,209*0,209*0,209*0,209*0,209*0,
     2   209*0,209*0,209*0,209*0,209*0,209*0,209*0,209*0,209*0,209*0,
     3   209*0,209*0,209*0,209*0,209*0,209*0,209*0,209*0,209*0,209*0,
     4   209*0,209*0,209*0,209*0,209*0,209*0,209*0,209*0,209*0,209*0,
     5   209*0,209*0,209*0,209*0,209*0,209*0,209*0,209*0,209*0,209*0,
     6   209*0,209*0,209*0,209*0,209*0,209*0,209*0,209*0,209*0,209*0,
     7   209*0,209*0,209*0,209*0,209*0,209*0,209*0,209*0,209*0,209*0,
     8   209*0,209*0,209*0,209*0,209*0,209*0,209*0,209*0,209*0,209*0,
     9   209*0,209*0,209*0,209*0,209*0,209*0,209*0,209*0,209*0,209*0,
     A   209*0,209*0,209*0,209*0,209*0,209*0,209*0,209*0,209*0,209*0,
     B   209*0,209*0,209*0,209*0,209*0,209*0,209*0,209*0,209*0,209*0,
     x   160*0,7*1,42*0,   158*0,10*1,41*0,  157*0,12*1,40*0,
     x   156*0,14*1,39*0,  156*0,14*1,39*0,  156*0,13*1,40*0,
     x   156*0,12*1,41*0,  156*0,12*1,41*0,  156*0,12*1,41*0,   !119
     x   71*0, 97*1,41*0,  71*0, 97*1,41*0,  71*0, 98*1,40*0,
     x   71*0, 99*1,39*0,  71*0,100*1,38*0,  71*0,100*1,38*0,
     x   71*0, 99*1,39*0,  71*0, 98*1,40*0,  70*0, 98*1,41*0,   !128
     x   69*0, 99*1,41*0,  69*0, 98*1,42*0,  69*0, 98*1,42*0,
     x   69*0, 97*1,43*0,  68*0, 98*1,43*0,  68*0, 97*1,44*0,
     x   68*0, 97*1,44*0,  67*0, 99*1,43*0,  67*0, 99*1,43*0,   !137
     x   67*0,100*1,42*0,  67*0,100*1,42*0,  67*0,101*1,41*0,
     x   67*0,101*1,41*0,  67*0,101*1,41*0,  67*0,102*1,40*0,
     x   67*0,102*1,40*0,  67*0,103*1,39*0,  67*0,103*1,39*0,   !146
     x   67*0,102*1,40*0,  67*0,102*1,40*0,  67*0,101*1,41*0,
     x   67*0,101*1,41*0,  67*0,100*1,42*0,  67*0,100*1,42*0,
     x   68*0, 98*1,43*0,  68*0, 98*1,43*0,  69*0, 96*1,44*0,   !155
     x   69*0, 96*1,44*0,  69*0, 95*1,45*0,  69*0, 95*1,45*0,
     x   69*0, 94*1,46*0,  70*0, 93*1,46*0,  70*0, 94*1,45*0,
     x   71*0, 93*1,45*0,  72*0, 93*1,44*0,  73*0, 92*1,44*0,   !164
     x   73*0, 93*1,43*0,  74*0, 93*1,42*0,  74*0, 94*1,41*0,
     x   75*0, 94*1,40*0,  76*0, 94*1,39*0,  77*0, 94*1,38*0,
     x   78*0, 94*1,37*0,                                       !171
     x   79*0, 94*1,36*0,           80*0, 68*1,13*0,12*1,36*0,
     x   81*0, 66*1,14*0,12*1,36*0, 82*0, 64*1,15*0,11*1,36*0,
     x   83*0, 63*1,16*0,11*1,36*0, 102*0,35*1,26*0,10*1,36*0,
     x   102*0,31*1,31*0, 9*1,36*0, 102*0,30*1,32*0, 8*1,37*0,  !179
     x   103*0,28*1,78*0,  104*0,26*1,79*0,  115*0,14*1,80*0,
     x   116*0,13*1,80*0,  116*0,13*1,80*0,  117*0,12*1,80*0,   !185
     x   117*0,12*1,80*0,  118*0,11*1,80*0,  118*0,11*1,80*0,
     2   209*0,209*0,209*0,209*0,209*0,209*0,209*0,
     3   209*0,209*0,209*0,209*0,209*0,209*0,209*0,209*0,209*0,209*0,
     4   209*0,209*0,209*0,209*0,209*0,209*0,209*0,209*0,209*0,209*0,
     5   209*0,209*0,209*0,209*0,209*0,209*0,209*0,209*0,209*0,209*0,
     6   1*0/        ! This poor guy was left out ..... kumar
C
      PRINT *, ' IDIM=', IDIM, '  JDIM=',JDIM
      PRINT *, ' IBIG=', IBIG, '  JBIG=',JBIG
C
      DO I=1, IBIG
         DO J=1, JBIG
            IF( LAN(I,J).EQ.0) FLDIN(I,J) = XINDEF
         ENDDO
      ENDDO
C
C     DO J=1,225
C     PRINT *,' J=', J
C        WRITE(*,140)(NINT(FLDIN(M,J)),M=1,209)
C     ENDDO
C140  format( 5(1x,30(f1.0, 1x),/), 27(f1.0,1x),/)
C140  format( 5(40(1x,  i1),/), 9( 1x,i1),/)
C
C
C     DO I=1, 53  
C        DO J=1, 57  
C           XAN(I,J) = 0
C           SAN(I,J) = 0
C        ENDDO
C     ENDDO
C
C     DO I=1, 53
C          IK= (I-1)*4+1
C        DO J=1, 57
C          JK= (J-1)*4+1
C          INUM = 0
C          DO M= IK, IK+3
C             DO N=JK, JK+3
C                INUM=INUM+LAN(M,N)
C             ENDDO
C          ENDDO
C          IF (INUM.GT.5) XAN(I,J)=1
C        ENDDO
C     ENDDO
C
C
C             CALL UPDOWN(XAN,ZAN,53,57)
C
C     DO I=2,53
C        DO J=1,55
C           SAN(I,J) = ZAN(I-1, J+2)
C        ENDDO
C     ENDDO
C
      DO J=1,57 
      PRINT *,' J=', J
         WRITE(*,150)(SAN(M,J),M=1,53)
      ENDDO
 150  format( 3(10(1x,  i1),3x),/, 2(10( 1x,i1),3x),3(1x,i1),/)
C
      RETURN
      END
ckumar
ckumar####################block data indfsea_data
ckumar
      BLOCK DATA INDFSEA_DATA
C
      COMMON/SEA/ SAN(53,57)
      INTEGER    SAN
C
      DATA  SAN    /
     X   53*0, 53*0, 53*0, 53*0, 53*0, 53*0,
     X   29*0, 4*1, 8*0, 3*1, 9*0,     29*0,  4*1,  8*0,  3*1, 9*0,
     X   28*0, 5*1, 7*0, 4*1, 9*0,     28*0,  5*1,  7*0,  4*1, 9*0, !10
     X   27*0, 7*1, 6*1, 4*1, 9*0,     21*0, 17*1,  3*0,  3*1, 9*0,
     X   20*0,24*1, 9*0,               19*0, 24*1, 10*0,            !14
     X   19*0,23*1, 11*0,              18*0, 24*1, 11*0,
     X   18*0,24*1, 11*0,              18*0, 25*1, 10*0,            !18
     X   18*0,25*1, 10*0,              18*0, 26*1,  9*0,
     X   18*0,26*1,  9*0,              18*0, 26*1,  9*0,            !22
     X   18*0,26*1,  9*0,              18*0, 25*1, 10*0,            !24
     X   19*0,24*1, 10*0,              19*0, 24*1, 10*0,
     X   19*0,25*1,  9*0,              40*0,  3*1, 10*0,            !28
     X   40*0, 4*1,  9*0,              41*0,  2*1, 10*0,            !30
     X   53*0, 53*0, 53*0, 53*0, 53*0, 53*0, 53*0, 53*0,
     X   53*0, 53*0, 53*0, 53*0, 53*0, 53*0, 53*0, 53*0, 53*0, 53*0,
     X   53*0, 53*0, 53*0, 53*0, 53*0, 53*0, 53*0, 53*0, 53*0/
C
       END BLOCK DATA INDFSEA_DATA
