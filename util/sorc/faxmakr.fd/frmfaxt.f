      SUBROUTINE FRMFAXT(LGULF,INBYTE,LEVEL,LMEAN,INTEXT)
C                  
C$$$  SUBPROGRAM DOCUMENTATION BLOCK
C                .      .    .                                       .
C SUBPROGRAM:    FRMFAXT      FORMS THE COMPLETED MAP TITLE.
C   PRGMMR: KRISHNA KUMAR      ORG: W/NP12     DATE: 1999-08-01
C
C ABSTRACT: GIVEN THE VARIOUS TIME TITLES IN LGULF ARRAY FORMED BY
C   SUB GULFTL, COMPLETE THE FAX MAP TITLE PASSED IN INTEXT.
C   RETURN COMPLETED MAP TITLE IN TITLE,AND TITLE BYTE COUNT IN
C   NUMT. LOADS THE VALID TIME AT THE END OF JFID.
C PROGRAM HISTORY LOG:
C   96-05-31  ORIGINAL AUTHOR HENRICHSEN.
C   96-06-07  HENRICHSEN MODIFY TO FORM MEAN MAP TITLES.
C   96-06-21  HENRICHSEN MODIFY TO FORM A HIEGHT LINE FOR GULF 
C             TITLES MODIFY COMMON/LLABFX/ TO PASS TITLE HEIGHT "THEIGHT"
C             HGTFLG.
C   96-06-27  HENRICHSEN MODIFY TO FILLER CHAR'S '#' IN THE 
C             IGLAB ARRAY IF NECESSARY.
C 1999-08-01  KRISHNA KUMAR CONVERTED THIS CODE FROM CRAY TO IBM
C             RS/6000.
C   
C USAGE:    CALL FRMFAXT(LGULF,INBYTE,LEVEL,LMEAN,INTEXT)
C                       
C   INPUT ARGUMENT LIST:
C     LGULF    - CHARACTER*77 BYTE ARRAY THAT COTAINS THE VARIOUS TIME
C              - LINES TO APPEND TO MAP TITLE.
C              - BYTES 1 THRU 16 CONTAIN THE GULF TITLE, IE
C              - HGT12 00Z02OPTIN     .
C              - BYTES 17 THRU 36 CONTAIN THE BASE TIME TITLE, IE
C              - 12Z WED 01 MAR 1989  .
C              - BYTES 37 THRU 61 CONTAIN THE VALID TIME TITLE, IE
C              - VALID 00Z THU 02 MAR 1989  .
C              - BYTES 62 THRU 77 CONTAIN MM/DD/HHZ  YYYY USED
C              - WITH AFOS PRODUCTS, IE
C              - 03/01/12Z  1989  .
C     INBYTE   - CONTAINS THE NUMBER OF BYTES OF ASCII TEXT IN
C              - INTEXT.
C     LEVEL    - INTEGER VALUE OF THE LEVEL OF THE MAP.
C     LMEAN    - LOGICAL WORD THAT IS = .TRUE. THEN FORM A MEAN MAP 
C              - TITLE.
C     INTEXT   - CHARCATER*80 TEXT STRING
C  FROM COMMON/LABG & LLABFX /
C     NUMG     - CONTAINS THE NUMBER OF BYTES OF ASCII TEXT IN
C              - GLAB ARRAY.

C     JFID     - CHARACTER*48 ARRAY THAT CONTAINS THE DESCRIPTIVE 
C              - MAP TITLE FOR START OF THE FAX ID RECORD. THIS WILL
C              - THE VALID TIME APPENDED WHEN RETURNED.
C     JBYT     - NUMBER OF BYTES OF ASCII TEXT PASSED IN JFID

C
C   OUTPUT ARGUMENT LIST:
C  IN COMMON/LABG/
C     GLAB     - CHARACTER*24 ARRAY THE CONTAINS THE COMPLETED GULF
C              - LABEL.
C  IN COMMON/LLABFX/
C     TITLE    - CHARCATER*151 TITLE
C                CONTAINS COMPETED MAP TITLE.
C     NUMT     - NUMBER OF BYTES IN COMPLETED MAP TITLE.....
C
C     JFID     - CHARACTER*48 ARRAY THAT CONTAINS THE COMPLETED
C              - JFID TITLE . WILL HAVE THE FORM OF:
C              - THE DESCRIPTIVE MAP TITLE THEN HHZ MMM DD YYYY.
C     EXVALID  - CHARACTER*32 ARRAY THAT CONTAINS THE VALID TIME
C              - TITLE . WILL HAVE THE FORM OF:
C              - VALID 00Z THU 05 OCT 1994
C     JBYT     - NUMBER OF BYTES IN COMPLETED JFID TITLE.
C
C   OUTPUT FILES:
C     FT06F001 - STANDARD PRINT FILE.
C
C REMARKS:
C
C
C ATTRIBUTES:
C   LANGUAGE: F90
C   MACHINE:  IBM
C
C$$$
C
C
C
      COMMON /LABG/ GULPXX(2),GULPXY(2),LVFLG,NUMG,GLAB
C
      INTEGER       GULPXX,GULPXY,LVFLG,NUMG
      CHARACTER*24  GLAB
C     
      COMMON /LLABFX/ TITPXX,TITPXY,HGTFLG,THEIGHT,NUMT,JBYT,
     1              TITLE,JFID,EXVALID              
C
      INTEGER       TITPXX,TITPXY,HGTFLG,NUMT,JBYT
      REAL          THEIGHT
      CHARACTER*152 TITLE
      CHARACTER*48  JFID
      CHARACTER*32  EXVALID

C 
      CHARACTER*120 ITITLE
      CHARACTER*80  INTEXT
      CHARACTER*77  LGULF
      CHARACTER*64  MEANTIT
      
      CHARACTER*48  WORKTIT
      
      CHARACTER*26  CENT
      CHARACTER*24  IGLAB
      CHARACTER*12  CHTEXT
      CHARACTER*8   VALID
C
      LOGICAL       LLEVEL
      LOGICAL       LMEAN
C
      DATA          CENT /' (5-DAY MEAN CENTERED ON) '/ 
C
C
      DATA          VALID      /'VALID   '/
C
C     WORK ON JFID.
C
             IF(JBYT.GT.29)THEN
               JBYT = 29
             ENDIF
             NUMCHR = JBYT + 19 
             IF(NUMCHR.GT.48)THEN
               NUMCHR = 48
             ENDIF
C
C           LOAD VALID TIME AT THE END OF JFID
C
            JFID(JBYT+1:JBYT+19) = LGULF(43:61)
            JBYT = NUMCHR
C
           WRITE(6,FMT='('' FRMFAXT: JFID NOW HAS'',I3,'' BYTES '',
     1    ''AND IS:"'',A,''".'')')JBYT,JFID(1:JBYT)
C
C
C      GET NUMBER OF BYTES IN INTEXT..............
C

         KEND = INBYTE
C
C . . . FILL ITITLES WITH BLANKS............
C
        ITITLE = ' '
        WORKTIT(1:48) = ' '
C
        IF(LMEAN)THEN
C
C       LOAD THE BASE AND CENTERED ON TIME INTO MEANTIT
C
          MEANTIT(01:19) = LGULF(17:35)
          MEANTIT(20:45) = CENT(1:26)
          MEANTIT(46:64) = LGULF(43:61)
         WRITE(6,FMT='('' FRMFAXT: MEANTIT='',A)')MEANTIT(1:64)      
        ELSE
        ENDIF
C
         WORKTIT(1:48) = ' '
C
C       LOAD THE VALID TIME INTO WORKTIT
C
         WORKTIT(1:25) = LGULF(37:61)
         NUMCHR = 25
C
C
C
            EXVALID(1:NUMCHR) = WORKTIT(1:NUMCHR)
C
            WRITE(6,FMT='('' FRMFAXT: EXVALID='',/,'' '',
     1          A)')EXVALID(1:NUMCHR)
C
C       NOW MOVE INTEXT INTO ITITLE.
C
         ITITLE(1:KEND) = INTEXT(1:KEND)
C
          NUMBYT = KEND + 1
C
          KEYLOC = NUMBYT - 8
C
C        CHECK TO SEE IF VALID IS WITHIN THE LAST 8 BYTES OF ITITLE.
C
        DO  I = KEYLOC,NUMBYT
            IHERE = I
            IIEND  = I + 5
             IF(ITITLE(I:IIEND).EQ.VALID(1:6)) THEN
               NUMBYT = IHERE + 6
               IBEGN  = 43
               INBYTE = 19
               GOTO 60
             ENDIF
        ENDDO
C
C        I FELL THROUGH DID NOT FIND VALID IN ITITLE SO LOOK FOR 1ST
C        NON BLANK AT END OF ITITLE.
C
          IEND = NUMBYT
        DO  I = 1,5
           IF(ITITLE(IEND:IEND).NE.' ') THEN
C
C         I FOUND FIRST NON BLANK AT END OF ITITLE ARRAY
C
             NUMBYT = IEND + 1
             IHERE  = IEND + 2
             GO TO 25
           ELSE
             IEND = IEND - 1
           ENDIF
        ENDDO
  25    CONTINUE
           NUMBYT = NUMBYT + 1
           IBEGN  = 37
           INBYTE = 25
  60    CONTINUE
C
C
C        MOVE BASE  LINE INTO ITITLE
C
        IF (GULPXX(2).EQ.-99 .AND. GULPXY(2).EQ.-99) THEN
            ITITLE(NUMBYT:NUMBYT+4) = 'FROM '
            NUMBYT = NUMBYT + 5
            LEND1 = NUMBYT + 20 - 1
            ITITLE(NUMBYT:LEND1) = LGULF(17:36)
            NUMBYT = NUMBYT + 20
            ITITLE(NUMBYT:NUMBYT) = ' '
         ENDIF
C
         IF(LMEAN)THEN
C
C        MOVE MEANTIT LINE INTO ITITLE
C
          MAXBYT = NUMBYT + 64
         ITITLE(NUMBYT:MAXBYT) = MEANTIT(1:64)
          NUMBYT = MAXBYT
         ELSE
C
C        MOVE VALID LINE INTO ITITLE
C
          KEND1 = IBEGN + (INBYTE-1)
          KEND2 = NUMBYT + (INBYTE-1)
          ITITLE(NUMBYT:KEND2) = LGULF(IBEGN:KEND1)
           NUMBYT = NUMBYT + INBYTE - 1
         ENDIF
         NUMT = NUMBYT
         TITLE(1:NUMT) = ITITLE(1:NUMT)
         WRITE(6,FMT='('' FRMFAXT: TITLE='',A,/,'' NUMT='',I4)')
     1   TITLE(1:NUMT),NUMT
C
C        LOAD THE GULF LABLE INTO IGLAB.
C
        IGLAB(1:24) = ' '
        IGLAB(1:06)  = LGULF(1:06)
C
C        CHECK TO SEE IF A '#' SHOULD BE LOADED INTO IGLAB(6:6).
C
        IF(LGULF(6:6).EQ.' ')IGLAB(6:6) = '#'
        IGLAB(7:11)  = LGULF(7:11)
        IGLAB(13:17) = LGULF(12:16)
        IF(LGULF(16:16).EQ.' ')IGLAB(17:17) = '#'
        IF(LGULF(15:15).EQ.' ')IGLAB(16:16) = '#'
        IF(LGULF(14:14).EQ.' ')IGLAB(15:15) = '#'
        IF(LVFLG.GT.0)THEN
         IF(LEVEL.GT.0)THEN
          IF(LEVEL.GE.1000)THEN
            NCHR = 4
          ELSE IF(LEVEL.GE.100)THEN
            NCHR = 3
          ELSE
            NCHR = 2
          ENDIF
          CALL BIN2CH(LEVEL,CHTEXT,NCHR,'W999')
           IF(NCHR.EQ.3)THEN
            CHTEXT(4:4) = '#'
           ELSE IF(NCHR.EQ.2)THEN
            CHTEXT(3:4) = '##'
           ELSE
           ENDIF
          IGLAB(18:21) = CHTEXT(1:4)
         ELSE
          IGLAB(18:21) = 'SFC '
          CHTEXT(1:4) = 'SFC '
         ENDIF
            IGLAB(22:24) = 'YES'
            WRITE(6,FMT='('' FRMFAXT: LEVEL='',I6,/,'' CHTEXT='',A)')
     1      LEVEL,CHTEXT(1:4)
          
          NUMG = 24          
        ELSE
          NUMG = 17
        ENDIF
        GLAB(1:NUMG) = IGLAB(1:NUMG)
         WRITE(6,FMT='('' FRMFAXT: GLAB ='',A)')
     1   GLAB(1:NUMG)
C         
      RETURN
      END
