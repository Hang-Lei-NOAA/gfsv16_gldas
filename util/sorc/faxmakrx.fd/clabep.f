      SUBROUTINE CLABEP(Z,IMAX,JMAX,S,A,B,M,IJFOX,LOX,
     X                  ITABMB,ITABFL,MXITR,LPLMI,IFF)
C$$$  SUBPROGRAM DOCUMENTATION BLOCK
C                .      .    .                                       .
C SUBPROGRAM:    CLABEP      DESCRIPTIVE TITLE NOT PAST COL 70
C   PRGMMR: KRISHNA KUMAR          ORG: W/NP12   DATE: 1999-08-01
C
C ABSTRACT: FINDS WITHIN A GIVEN RECTANGULAR ARRAY OF THE
C   FORM Z(IMAX,JMAX) AND A FIXED I COLUMN OR J ROW (IJFIX) ALL OF
C   THE CONTOUR LABELS THAT CUT THIS FIXED I COLUMN (NORTH/SOUTH
C   LABELS) OR J ROW (EAST/WEST LABELS).  WHENEVER IJFIX IS POSITIVE
C   A FIXED J ROW IS DESIRED, WHENEVER IJFIX IS NEGATIVE A FIXED
C   I COLUMN IS DESIRED.  IN ADDITION BASED ON THE SCALE OF THE GRID
C   (SCALE) THIS SUBROUTINE RESTRICTS THE NUMBER OF CONTOUR LABELS
C   ALLOWED PER I OR J DISTANCE WHEN PREPARING THE LABELS FOR OUTPUT.
C
C PROGRAM HISTORY LOG:
C   ??-??-??  DICK SCHURR
C   93-04-07  LILLY CONVERT SUBROUTINE TO FORTRAN 77
C   96-10-03  LUKE LIN      CONVERT IT CFT77
C 1999-08-01  KRISHNA KUMAR CONVERTED THIS CODE FROM CRAY TO IBM RS/6000
C                           ASSIGNED INDEFF VALUE FOR IBM USING RANGE  
C                           FUNCTION FOR xlf qintsize=8 qrealsize=8 
C                           OPTIONS
C
C USAGE:    CALL CLABEP( Z, IMAX, JMAX, S, A, B, M, IJFOX, LOX,
C                        ITABMB, ITABFL, MXITR, LPLMI, IFF )
C   INPUT ARGUMENT LIST:
C     INARG1   - GENERIC DESCRIPTION, INCLUDING CONTENT, UNITS,
C     INARG2   - TYPE.  EXPLAIN FUNCTION IF CONTROL VARIABLE.
C
C   OUTPUT ARGUMENT LIST:      (INCLUDING WORK ARRAYS)
C     WRKARG   - GENERIC DESCRIPTION, ETC., AS ABOVE.
C     OUTARG1  - EXPLAIN COMPLETELY IF ERROR RETURN
C     ERRFLAG  - EVEN IF MANY LINES ARE NEEDED
C
C   INPUT FILES:   (DELETE IF NO INPUT FILES IN SUBPROGRAM)
C     DDNAME1  - GENERIC NAME & CONTENT
C
C   OUTPUT FILES:  (DELETE IF NO OUTPUT FILES IN SUBPROGRAM)
C     DDNAME2  - GENERIC NAME & CONTENT AS ABOVE
C     FT06F001 - INCLUDE IF ANY PRINTOUT
C
C REMARKS: LIST CAVEATS, OTHER HELPFUL HINTS OR INFORMATION
C
C ATTRIBUTES:
C   LANGUAGE: FORTRAN 90
C   MACHINE:  IBM
C
C$$$
C
      COMMON   /PUTARG/PUTHGT,PUTANG,IPRPUT(2),ITAPUT
      COMMON/ADJ3/IRTCOR,IUPCOR
C
      INTEGER      ITEXT(3),JTEXT(3)
      CHARACTER*8  IFF(5)
      REAL         Z(IMAX,JMAX)
      INTEGER      ITABMB(MXITR),ITABFL(MXITR)
C
      CHARACTER*12  LTEXT
      CHARACTER*12  MTEXT
      CHARACTER*4   LPLMI
      INTEGER     M(2)
C
      REAL   INDEF,IDEF,KDEF1,KDEF2,KDEF3,KDEF4
C
      DATA INDEF  / 1.0E307 /
C
      DATA ITEXT/0,0,0/
C
C     ...WHERE UP AND RIGHT ARE DIR REL TO LABEL NUMBERS VIEWED NATURALY
C///  EQUIVALENCE(LTEXT,ITEXT(1))
C///  EQUIVALENCE(MTEXT,JTEXT(1))
C
      IJFIX=IJFOX
      KCON4=20
      KCON5=30
      IMIN=1
      JMIN=1
      KBEG=IMIN+2
      KLIM=IMAX-2
      ITYPE=0
      IF(IJFIX.GE.0) GO TO 10
      IJFIX=-IJFIX
      KBEG=JMIN+2
      KLIM=JMAX-4
      ITYPE=1
  10  Q=S*20.
      REM=1.
      KCON6=(FLOAT(IJFIX-1)*Q*3.)+0.5
C     ...WHERE KCON6 IS TRUE LOCN (IN DOTS) OF THE PT ON FIXED COORD.
      ICAL1 = KCON6 + IRTCOR
C     ...THIS ICAL1 IS IDOTS FOR PUTNLAB FOR CONST I CASE, BUT NOT FOR J
      Q1=1./(2.*Q*Q)
      Q2=(Q+1.)/2.
      Q3=1./Q
      N=8
      KLAST=0
      KSTART=KBEG
      IF(ITYPE.EQ.1) GO TO 15
      DO 11 K=KBEG,KLIM
      IDEF=Z(K,IJFIX)
      IF(IDEF.NE.INDEF) GO TO 12
      KSTART=KSTART+1
  11  CONTINUE
      GO TO 500
  12  L=Z(KSTART,IJFIX)
      GO TO 20
  15  DO 16 K=KBEG,KLIM
      IDEF=Z(IJFIX,K)
      IF(IDEF.NE.INDEF) GO TO 17
      KSTART=KSTART+1
  16  CONTINUE
      GO TO 500
  17  L=Z(IJFIX,KSTART)+10000.
  20  DO 200 K=KSTART,KLIM
      Q4=REM/2.
      Q5=1.-REM
      X=Q-Q5
      IINC=X
      REM=X-FLOAT(IINC)
C
C     CHECK FOR IMBEDDED GRID
C
      IF(ITYPE.EQ.1) GO TO 25
      KDEF1=Z(K,IJFIX)
      KDEF2=Z(K+1,IJFIX)
      KDEF3=Z(K-1,IJFIX)
      KDEF4=Z(K+2,IJFIX)
      YD2=0
      IF((KDEF1.EQ.INDEF).OR.(KDEF2.EQ.INDEF).OR.(KDEF3.EQ.INDEF).OR.
     X(KDEF4.EQ.INDEF)) GO TO 21
      YD2=(Z(K+2,IJFIX)-Z(K+1,IJFIX)-Z(K,IJFIX)+Z(K-1,IJFIX))*Q1
  21  IF((KDEF1.EQ.INDEF).OR.(KDEF2.EQ.INDEF)) GO TO 200
      YD1=(Z(K+1,IJFIX)-Z(K,IJFIX))*Q3-(Q2*YD2)+Q5*YD2
      YVAL=Z(K,IJFIX)+Q5*Q4*YD1
      GO TO 35
  25  KDEF1=Z(IJFIX,K)
      KDEF2=Z(IJFIX,K+1)
      KDEF3=Z(IJFIX,K-1)
      KDEF4=Z(IJFIX,K+2)
      YD2=0
      IF((KDEF1.EQ.INDEF).OR.(KDEF2.EQ.INDEF).OR.(KDEF3.EQ.INDEF).OR.
     X(KDEF4.EQ.INDEF)) GO TO 31
      YD2=(Z(IJFIX,K+2)-Z(IJFIX,K+1)-Z(IJFIX,K)+Z(IJFIX,K-1))*Q1
  31  IF((KDEF1.EQ.INDEF).OR.(KDEF2.EQ.INDEF)) GO TO 200
      YD1=(Z(IJFIX,K+1)-Z(IJFIX,K))*Q3-(Q2*YD2)+Q5*YD2
      YVAL=Z(IJFIX,K)+Q5*Q4*YD1+10000.
  35  DO 130 KK=1,IINC
      MM=YVAL
      IF((MM-L).EQ.0) GO TO 125
C
C     COMPUTE A LABEL
C
      XVAL=MM-10000
      IF((IABS(MM)-IABS(L)).LT.0) XVAL=L-10000
      KCON1=(KK-1)*3
      KCON7 = FLOAT(K - 1) * Q * 3.0
      IF(ITYPE.EQ.1) GO TO 40
      JCAL = KCON6 + IRTCOR
      ICAL = KCON7 + KCON1 + IUPCOR
      ICAL1 = ICAL
      GO TO 45
   40 CONTINUE
      JCAL = KCON7 + KCON1 + IUPCOR
C     ...THIS JCAL IS JDOTS FOR PUTNLAB FOR CONST I CASE.
      ICAL = JCAL
   45 CONTINUE
      HOLD=B*(XVAL+A)
      ITEXT(1)=SIGN((ABS(HOLD)+0.05),HOLD)
      KPOSX = KCON4
C     PRINT *,' ICAL=',ICAL,' KLAST=',KLAST,' KPOSX=',KPOSX
      IF(ABS(ICAL-KLAST).LT.KPOSX) GO TO 125
      KLAST=ICAL
C     PRINT *,' LOX=',LOX
      IF(LOX.EQ.1) GO TO 109
  50  INTG=ITEXT(1)
      NCHAR=M(2)
C
C     FORMAT STRIP LABEL
C
      CALL BIN2EB(INTG,MTEXT,NCHAR,LPLMI)
      N=12
C???  WRITE(LTEXT,FMT=IFF)JTEXT(1)
      WRITE(LTEXT,FMT=IFF)MTEXT
C
      CALL PUTLAB(ICAL1,JCAL,PUTHGT,LTEXT,PUTANG,N,IPRPUT,ITAPUT)
      GO TO 125
C
C     USE INDIRECT LABELS
C
 109  CONTINUE
C     print *,' at 109, mxitr=',mxitr
      DO 110 ITR=1,MXITR
      ITSAVE=ITR
C        PRINT *,' ITEXT(1)=',ITEXT(1),' ITABMB=',ITABMB(ITR)
      IF(ITABMB(ITR).EQ.ITEXT(1)) GO TO 112
 110  CONTINUE
      GO TO 125
 112  KLAST=ICAL
      ITEXT(1)=ITABFL(ITSAVE)
      GO TO 50
 125  L=MM
      YD1=YD1+YD2
      YVAL=YVAL+YD1
 130  CONTINUE
 200  CONTINUE
 500  RETURN
      END
