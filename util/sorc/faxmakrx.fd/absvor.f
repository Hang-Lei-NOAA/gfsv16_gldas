      SUBROUTINE ABSVOR(KSOUTH,FLDU,FLDV,IMAX,JMAX,XMESHL,XIPOLE,XJPOLE,
     1                 WORK,FABSVO,IERROR)
C$$$  SUBPROGRAM DOCUMENTATION BLOCK
C                $      .    .                                       .
C SUBPROGRAM:    ABSVOR      ABSOLUTE VORTICITY FROM WINDS
C   PRGMMR: KRISHNA KUMAR         ORG: W/NP12    DATE: 1999-08-01
C
C ABSTRACT: GENERATES A FIELD OF ABSOLUTE VORTICITY FROM THE GIVEN WINDS
C   ON A GRID WHICH OVERLAYS A POLAR STEREOGRAPHIC MAP PROJECTION
C   TRUE AT 60N LATITUDE  IF FOR A NORTHERN HEMISPHERIC MAP
C   (TRUE AT 60S LATITUDE IF FOR A SOUTHERN HEMISPHERIC MAP).
C
C PROGRAM HISTORY LOG:
C   82-08-03  SHIMOMURA
C   88-10-06  LUKE LIN       ADD NEW DOCBLOCK
C   95-02-15  LUKE LIN       CONVERT IT CFT-77
C 1999-08-01  KRISHNA KUMAR  CONVERTED THIS CODE FROM CRAY TO IBM RS/6000 SP
C
C USAGE:   CALL ABSVOR(KSOUTH,FLDU,FLDV,IMAX,JMAX,XMESHL,XIPOLE,
C                    XJPOLE,WORK,FABSVO,IERROR)
C   INPUT ARGUMENT LIST:
C     KSOUTH  - SET KSOUTH=0  IF DATA IS FOR NORTHERN HEMISPHERIC MAP
C             - SET KSOUTH=1  IF DATA IS FOR SOUTHERN HEMISPHERIC MAP
C     FLDU    - REAL*4  FLDU(IMAX,JMAX)
C             - U-COMPONENT OF THE WIND IN METERS PER SEC.
C             - U-COMPONENT IS GRID-ORIENTED COMPONENT IN X DIRECTION
C     FLDV    - REAL*4  FLDV(IMAX,JMAX)
C             - V-COMPONENT OF THE WIND IN METERS PER SEC.
C             - V-COMPONENT IS GRID-ORIENTED COMPONENT IN Y DIRECTION
C     IMAX    - I-DIMENSION OF THE GRID
C     JMAX    - J-DIMENSION OF THE GRID
C     XMESHL  - GRID INTERVAL (IN KILOMETERS) AT TRUE LATITUDE.
C     XIPOLE  - LOCATION OF POLE, I-COORDINATE OF POLE (REAL*4)
C     XJPOLE  - LOCATION OF POLE, J-COORDINATE OF POLE (REAL*4)
C     WORK    - REAL*4  WORK(IMAX,6)  FOR TEMPORARY WORK SPACE
C
C   OUTPUT ARGUMENT LIST:
C    FABSVO   - REAL*4  FABSVO(IMAX,JMAX)
C             - FOR THE RESULTING ABSOULUTE VORTICITY VALUES
C    IERROR   - =0  IF NORMAL RETURN;
C             - =1  ABNORMAL RETURN  (IMAX/JMAX HAS INVALID VALUE);
C             - =2  ABNORMAL RETURN (XMESHL IS ZERO OR NEGATIVE).
C
C   REMARKS:  THE EDGE POINTS IN THE RESULTING FIELD OF ABSOLUTE
C     VORTICITY HAVE BEEN FILLED WITH VALUES IDENTICAL TO THE ADJACENT
C     FIRST INTERIOR POINTS, SO DON'T USE THE BOUNDARY POINTS UNLESS YOU
C     HAVE TO.
C     CAUTION ... THE 65*65 FIELDS FROM THE SPECTRAL MODEL, AS OF THIS
C     DATE,  CONTAIN GARBAGE IN THE CORNERS BEYOND THE EQUATOR, SO IF
C     YOU ARE USING THOSE FOR FLDU AND FLDV, THEN IGNORE THE RESULTING
C     STRANGE VALUES IN THE CORNERS BEYOND THE EQUATOR.
C
C ATTRIBUTES:
C   LANGUAGE: F90
C   MACHINE: IBM
C
C$$$
C
C     *     *     *     *     *     *     *     *     *     *     *
C
C     ... DERIVATION OF PROCEDURE ...
C     ...   IN THIS SUB WE WILL USE DIAGONAL DIFFERENCING
C     ...   WITH X-AXIS HEADING SOUTHEASTWARD  ON GRID
C     ... RELATIVE VORTICITY ZETA = DV/DX - DU/DY
C     ... DX IS APPROXIMATED BY DISTANCE OF SQRT(2) GRID INTERVALS
C     ...   CONVERTED TO EARTH DISTANCE BY MEANS OF THE MAP FACTOR:
C     ...     MAPFACTOR = (1+SINLAT) / (1+SIN(60))
C
C     ...   DX = SQRT(2) * XMESHL * MAPFACTOR
C     ... THE MAP FACTOR USED FOR DX IS APPROXIMATED BY THE AVERAGE
C     ... OF THE MAPFACTOR AT SOUTHEAST POINT AND NORTHWEST POINT
C
C     ... AVG MAPFACTOR =(1/2)*(MAPFACTOR(SE) + MAPFACTOR(NW))
C                       =(1/(2*(1+SIN60)))*(1+SINLAT(SE)+1+SINLAT(NW))
C
C     ... DX = (1.414*XMESHL/((2*(1+SIN60)))*(2+SINLAT(SE) + SINLAT(NW))
C
C     DV   2*(1+SIN60)     V(SOUTHEAST) - V(NORTHWEST)
C     -- = ------------ * -----------------------------------
C     DX   1.414*XMESHL   2 + SINLAT(SE) + SINLAT(NW)
C
C
C     *     *     *     *     *     *     *     *     *     *     *
C
      REAL       FLDU(IMAX,JMAX)
      REAL       FLDV(IMAX,JMAX)
      REAL       FABSVO(IMAX,JMAX)
      REAL       WORK(IMAX,6)
      REAL       Y(4)
C     ... WHERE Y(4) IS USED TO INTERPOLATE IN 4X4
C
      LOGICAL  LSHEMI
C
      DATA     CNV2RD / 0.0174533 /
      DATA     OMEGA2 / 1.4584E-1 /
C     ... WHERE 2 OMEGA SHUD BE 1.4584E-4 BUT I AM SCALING IT BY 1000.
C
      DATA     EARTHR / 6371.2 /
C     ... WHERE EARTHR IS EARTH RADIUS IN KM   ...
C
      DATA     KU / 1 /
      DATA     KV / 2 /
      DATA     KSIN / 3 /
      DATA     SICO45 / 0.7071068 /
      DATA     A1,A2,A3,A4 / -0.0625, 0.5625, 0.5625, -0.0625 /
C                            -1/16,   9/16,   9/16,   -1/16
C     ...   WHICH IS USED IN INTERPOLATING
C
C     . . .   S T A R T   . . .
C
      IERROR = 0
      LSHEMI = .FALSE.
      IF(KSOUTH .NE. 0) LSHEMI = .TRUE.
      IM2 = IMAX - 1
      IF(IM2 .LT. 2) GO TO 911
      JM2 = JMAX - 1
      IF(JM2 .LT. 2) GO TO 911
      IF(XMESHL .LE. 0.0) GO TO 922
C
C     ... INITIALIZE CONSTANT FOR DISTANCE FROM POLE TO EQUATOR
C     ...   IN GRID INTERVALS
      RMAPKM = 1.8660254 * EARTHR
      RMAPGI = RMAPKM / XMESHL
      GISQD = RMAPGI * RMAPGI
C
      EM = 1.0 + SIN(60.0*CNV2RD)
      EMOVRD = 2.0*EM / (1.4142136*XMESHL)
C     ... IN EMOVRD THE XMESHL IS IN KM, SO THE NUMBERS WILL BE
C     ...   TOO BIG BY A FACTOR OF 1000.0
C
C     ... THE WORK ARRAY WILL BE USED TO KEEP TWO ROWS OF DATA
C     ...   NEEDED FOR CALCULATING THE VORTICITY
C     ...      UPRIME, VPRIME, AND SINLAT FOR BOTH ROWS
C
C     ... INITIALIZE THE FIRST ROW'S DATA ...
      J = 1
      XJ = FLOAT(J) - XJPOLE
      JCURR = 0
      DO  222  I = 1,IMAX
      U = FLDU(I,J)
      V = FLDV(I,J)
      UPRIME = SICO45 * (U - V)
      VPRIME = SICO45 * (U + V)
      WORK(I,JCURR+KU) = UPRIME
      WORK(I,JCURR+KV) = VPRIME
      XI = FLOAT(I) - XIPOLE
      RSQD = XI*XI + XJ*XJ
      SINLAT = (GISQD - RSQD) / (GISQD + RSQD)
      WORK(I,JCURR+KSIN) = SINLAT
  222 CONTINUE
C
      JCURR = 3
      JABV = 0
      DO  277  JBIG = 1,JM2
      IF(JABV .EQ. 0) GO TO 233
C     ... ELSE, JABV MUST HAVE BEEN =3, SO RESET IT TO ZERO
      JABV = 0
      JCURR = 3
      GO TO 244
  233 CONTINUE
C     ... JABV WAS = 0, SO CHG IT TO = 3
      JABV = 3
      JCURR = 0
  244 CONTINUE
      JB1 = JBIG + 1
      XJ = FLOAT(JB1) - XJPOLE
      DO  255  I = 1,IMAX
      U = FLDU(I,JB1)
      V = FLDV(I,JB1)
      UPRIME = SICO45 * (U - V)
      VPRIME = SICO45 * (U+V)
      WORK(I,JABV+KU) = UPRIME
      WORK(I,JABV+KV) = VPRIME
      XI = FLOAT(I) - XIPOLE
      RSQD = XI * XI + XJ * XJ
      SINLAT = (GISQD - RSQD) / (GISQD + RSQD)
      WORK(I,JABV+KSIN) = SINLAT
  255 CONTINUE
C
      DO  266  I = 1,IM2
      VSE = WORK(I+1,JCURR+KV)
      VNW = WORK(I,JABV+KV)
      USW = WORK(I,JCURR+KU)
      UNE = WORK(I+1,JABV+KU)
      DENOMV = 2.0 + WORK(I+1,JCURR+KSIN) + WORK(I,JABV+KSIN)
      DVDX = (VSE - VNW) / DENOMV
C
      DENOMU = 2.0 + WORK(I+1,JABV+KSIN) + WORK(I,JCURR+KSIN)
      DUDY = (UNE - USW) / DENOMU
C
      ZETA3 = EMOVRD * (DVDX - DUDY)
C     ... WHICH IS THE SCALED RELATIVE VORTICITY AT OFFSET POINT
C     ...      (VALID AT MIDDLE OF GRID SQUARE)
C     ... NEXT, GET CORIOLIS PARAMETER ALSO FOR OFFSET POINT ...
      F3 = OMEGA2*0.25*(WORK(I,JCURR+KSIN)  + WORK(I+1,JCURR+KSIN) +
     1                  WORK(I,JABV+KSIN) + WORK(I+1,JABV+KSIN))
C
      IF(LSHEMI) F3 = -F3
C
      FABSVO(I,JBIG) = (ZETA3+F3) / 1000.0
C     ... THE OFFSET ABSOLUTE VORTICITY HAS BEEN STORED AT THE
C     ...   LOWER LEFT CORNER OF THE SQUARE WITHIN WHICH THE VALUE IS
C     ...      VALID FOR.
  266 CONTINUE
  277 CONTINUE
C
C     ... TO GET THE OFFSET POINTS BACK TO GRIDPOINTS, AVERAGE
C     ...   THE 4 POINTS SURROUNDING A GRIDPOINT.
C     ...   GO BACKWARDS THROUGH THE GRID TO AVOID OVERWRITING
C     ...   A VALUE I NEED TO USE YET.
      ICHK = 0
      JWKIN = 1
      JWKMID = 2
      JWKOUT = 3
C     ... USES 3 ROWS OF WORK ARRAY AS HOLDING TANK TO PREVENT OVERWRIT
C
C     ... DO 1ST INTERIOR ROW ADJACENT TO TOP ROW FIRST
C     ...   BY AVGG 4 SURROUNDING POINTS AND STORE IN WORK(I,JWKIN)
      JL = JMAX-2
      IMXM2 = IMAX - 2
      DO  411  IL = 1,IMXM2
      ALL = FABSVO(IL,JL)
      ALR = FABSVO(IL+1,JL)
      AUL = FABSVO(IL,JL+1)
      AUR = FABSVO(IL+1,JL+1)
C
      AVG = (ALL+ALR+AUL+AUR) / 4.0
      WORK(IL+1,JWKIN) = AVG
  411 CONTINUE
C     ... THEN FILL BOTH ENDS OF THIS LINE W/ SAME VALUE AS 1ST INTERIOR
      WORK(1,JWKIN) = WORK(2,JWKIN)
      WORK(IMAX,JWKIN) = WORK(IMAX-1,JWKIN)
C     ... WHICH FINISHED FIRST INTERIOR ROW ADJACENT TO TOP ROW
C
C     ... NEXT, MAKE A DUPLICATE OF FIRST INTERIOR FOR TOP ROW
C     ...   AND SAVE TEMPORARILY IN WORK(I,JWKMID)
      DO  422  I = 1,IMAX
      WORK(I,JWKMID) = WORK(I,JWKIN)
  422 CONTINUE
C
C     ... NOW WE ARE FAR ENOUGH INTO GRID TO HAVE 4X4 POINTS FOR
C     ...   16-POINT INTERPOLATION ...
      JMXM4 = JMAX - 4
      DO  477  JR = 1,JMXM4
      JLL = JMAX - JR - 3
C     ... TO GET POINT(ILL,JLL) TO POINT AT LOWER LEFT CORNER OF 4X4
C
C     ... TO RESET POINTERS OF FIRSTIN FIRST OUT STACK
      JSAVIN = JWKIN
      JWKIN = JWKOUT
      JWKOUT = JWKMID
      JWKMID = JSAVIN
C     ... AT FIRST INTERIOR POINT ADJACENT TO LEFT AND RIGHT ENDS
C     ...   OF THIS LINE, USE 4-POINT AVERAGE
      ALL = FABSVO(1,JLL+1)
      ALR = FABSVO(2,JLL+1)
      AUL = FABSVO(1,JLL+2)
      AUR = FABSVO(2,JLL+2)
C
      AVG = (ALL + ALR + AUL + AUR) / 4.0
      WORK(2,JWKIN) = AVG
C     ... THEN PUT SAME VALUE IN EDGE POINT
      WORK(1,JWKIN) = AVG
C
C     ... SIMILARLY AT THE RIGHT END OF THIS ROW ...
      ALL = FABSVO(IMAX-2,JLL+1)
      ALR = FABSVO(IMAX-1,JLL+1)
      AUL = FABSVO(IMAX-2,JLL+2)
      AUR = FABSVO(IMAX-1,JLL+2)
C
      AVG = (ALL + ALR + AUL + AUR) / 4.0
      WORK(IMAX-1,JWKIN) = AVG
      WORK(IMAX,JWKIN) = AVG
C     ... NEXT DO THE GOOD 4X4 INTERIOR POINTS OF THIS ROW
      IMXM4 = IMAX - 4
      DO  444  ILL = 1,IMXM4
C
C     ... INTERPOLATE TO CENTER OF 4X4 ARRAY WHOSE LOWER-LEFT
C     ...   CORNER IS AT (ILL,JLL)
      JTHIS = JLL
      DO  440  JJ = 1,4
C
      Y(JJ) =  A1*FABSVO(ILL,JTHIS)   + A2*FABSVO(ILL+1,JTHIS)
     1       + A3*FABSVO(ILL+2,JTHIS) + A4*FABSVO(ILL+3,JTHIS)
C
      JTHIS = JTHIS + 1
  440 CONTINUE
      RESULT = A1*Y(1) + A2*Y(2) + A3*Y(3) +A4*Y(4)
      IDEST = ILL + 2
      WORK(IDEST,JWKIN) = RESULT
  444 CONTINUE
C     ... WHICH FINISHED INTERPOLATING ONE ROW
C     ... NEXT OVERWRITE FABSVO ONE ROW FROM WORK(I,JWKOUT)
      JOVRWR = JLL + 4
      DO  455 I = 1,IMAX
      FABSVO(I,JOVRWR) = WORK(I,JWKOUT)
  455 CONTINUE
  477 CONTINUE
C     ... WHEN IT FALLS OUT OF 477 LOOP,
C     ... I HAVE DONE DESTINATION ROW J=3 AND STORED IT IN
C     ...   WORK(I,JWKIN),  AND I HAVE OVERWRITTEN FABSVO(I,5)
C     ...   WITH CONTENTS OF WORK(I,JWKOUT)
C
C     ... SO WHAT IS LEFT IN HOLDING TANK?
C     ... WORK(I,JWKMID) HAS JDESTINATION=4
C     ...   WORK(I,JWKIN) HAS JDESTINATION=3
C
C     ... AND I STILL NEED TO DO FIRST INTERIOR ROW USING DATA
C     ...   IN FABSVO ROWS 1 AND 2
C
C     ... SO I CAN OVERWRITE ROWS 4 AND 3
      DO  511  I = 1,IMAX
      FABSVO(I,4) = WORK(I,JWKMID)
  511 CONTINUE
      DO  522  I = 1,IMAX
      FABSVO(I,3) = WORK(I,JWKIN)
  522 CONTINUE
C     ... NOW HOLDING TANK IN WORK ARRAY IS ALL CLEAR
C     ... AND FIRST TWO ROWS OF FABSVO STILL HAS OFFSET DATA
      JL = 1
      DO  533  IL=1,IMXM2
      ALL = FABSVO(IL,JL)
      ALR = FABSVO(IL+1,JL)
      AUL = FABSVO(IL,JL+1)
      AUR = FABSVO(IL+1,JL+1)
C
      AVG = (ALL+ALR+AUL+AUR) / 4.0
      WORK(IL+1,JWKOUT) = AVG
  533 CONTINUE
      WORK(1,JWKOUT) = WORK(2,JWKOUT)
      WORK(IMAX,JWKOUT) = WORK(IMAX-1,JWKOUT)
C     ... WHICH COMEPLETES 1ST INTERIOR ROW SO OVERWRITE ROW2
      DO  544  I = 1,IMAX
      FABSVO(I,2) = WORK(I,JWKOUT)
  544 CONTINUE
C     ... FINALLY SET BOTTOM ROW IDENTICAL TO FIRST INTERIOR ROW
      DO  555  I = 1,IMAX
      FABSVO(I,1) = WORK(I,JWKOUT)
  555 CONTINUE
      GO TO 999
C
  911 CONTINUE
      IERROR = 1
      GO TO 999
  922 CONTINUE
      IERROR = 2
      GO TO 999
C
  999 CONTINUE
      RETURN
      END
