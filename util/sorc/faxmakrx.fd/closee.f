      SUBROUTINE CLOSEE(Z,IMAX,JMAX,S,A,B,M,IUP,IX,JY,LPLMI,ITST,IFF)
C$$$  SUBPROGRAM DOCUMENTATION  BLOCK
C                .      .    .                                       .
C SUBPROGRAM:    CLOSEE      LABEL CONTOURS
C   PRGMMR: KRISHNA KUMAR              ORG: W/NP12   DATE: 1999-08-01
C
C ABSTRACT: TO LABEL CONTOURS ALONG A CONSTANT JROW FROM THE GIVEN
C   POINT LOOKING FOR CONTOURS ALONG INCREASING I OVER IUP GRID
C   INTERVALS.
C
C PROGRAM HISTORY LOG:
C   YY-MM-DD  UNKNOWN
C   90-03-15  LILLY          ADD DOCBLOCK TO SUBROUTINE
C   93-06-01  GILBERT/LILLY  CONVERTED TO FORTRAN 77
C   96-11-30  YEN -          CONVERT FROM HDS TO CRAY.  CORRECT POTENTIAL
C                            PROBLEM WITH GETTING VALUES OUT OF BOUNDS AS
C                            HAD ENCOUNTERED IN CLOSED.
C 1999-08-01  KRISHNA KUMAR  CONVERTED THIS CODE FROM CRAY TO IBM 
C                            RS/6000. ASSIGNED PROPER VALUE TO INDEFF
C                            USING RANGE FUNCTION FOR IBM RS/6000 FOR
C                            COMPILE OPTIONS xlf -qintsize=8 -qrealsize=8
C
C USAGE:    CALL CLOSEE(Z,IMAX,JMAX,S,A,B,M,IUP,IX,JY,XLPLMIT,ITST,IFF)
C
C   INPUT ARGUMENT LIST:
C     Z        - SCALED DATA ARRAY OF SIZE IMAX,JMAX IN WHICH TO FIND
C              - CENTER VALUES.
C     IMAX,JMAX- DIMENSIONS OF Z ARRAY.
C     S        - SCALE VALUE WHICH IS DOTS PER GRID INTERVAL/ 60.0.
C              - IE 37.5/60.0
C     A        - ADDATIVE VALUE FOR CONVERTING CONTOUR VALUE BACK
C              - TO THE ORGINAL UNITS.
C     B        - MULTIPLICATIVE VALUE FOR CONVERTING CONTOUR VALUE
C              - BACK TO THE ORGINAL UNITS.
C     M        - ARRAY DIMENSIONED 2:
C              - FIRST WORD IS A FLAG AND HAS THE VALUE OF 0, 1, 2, 3.
C              - IF NE TO 0 THEN FIRST HALF OF IUP CONTAINS THE VALUE
C              - OF CONTOURS THAT WILL NOT BE LABELED.
C              - 2ND WORD IS A NUMBER OF CHARACTERS IN CONTOUR LABEL.
C     IUP      - TWO HALF WORD ARRAY WHERE:
C              - FIRST HALF IS 0 IF ALL CONTOURS WITHIN IUP UNITS ARE
C              - TO BE LABELED.
C              - IF NE TO 0 THEN FIRST HALF OF IUP CONTAINS THE VALUE
C              - OR RANGE OF CONTOURS THAT WILL NOT BE LABELED.
C              - 2ND HALF IS NUMBER OF GRID INTERVALS FROM CENTER TO
C              - LABEL CONTOURS.
C     IX,JY    - I,J COORDINATES WITHIN Z ARRAY OF CENTER POINT.
C     XLPLMT   - FORMAT WORD FOR SUBROUTINE BIN2EB.
C     ITST     - DATA SET REF NUMBER OF TEMPORARY DISK FILE TO
C              - WRITE ARGS ONTO
C     IFF      - 5 WORD FORMAT USED BY SUBROUTINE ENCODE TO FORM CON-
C              - TOUR LABELS.
C
C   OUTPUT ARGUMENT LIST:    NONE
C
C   SUBPROGRAMS CALLED:
C     LIBRARY:
C       COMMON   - PUTARG/PUTHGT,PUTANG,IPRPUT,ITAPUT
C                - ADJ3/ILCOR,JDCOR
C
C REMARKS: THE VALUES OF FIRST HALF OF M ARGUMENT ARE:
C   0 MEANS LABEL ALL CONTOURS WITHIN LIMITS.
C   1 MEANS SKIP THE LABELING OF CONTOURS THAT ARE EQUAL TO VALUE
C     FOUND IN FIRST HALF OF IUP ARGUEMENT.
C   2 MEANS SKIP THE LABELING OF CONTOURS THAT ARE LESS THAN OR EQUAL
C     TO THE VALUE FOUND IN FIRST HALF OF IUP ARGUEMENT.
C     TO THE VALUE FOUND IN FIRST HALF OF IUP ARGUEMENT.
C   3 MEANS SKIP THE LABELING OF CONTOURS THAT ARE GREATER THAN THE
C     VALUE FOUND IN FIRST HALF OF IUP ARGUEMENT.
C
C ATTRIBUTES:
C   LANGUAGE: FORTRAN 90
C   MACHINE:  IBM
C
C$$$
C
C     ...PURPOSE...TO LABEL CONTOURS ALONG A CONSTANT J ROW
C     ...FROM THE GIVEN POINT LOOKING FOR CONTOURS ALONG INCREASING
C     ...I OVER IUP GRID INTERVALS...
CHDS  COMMON   /PUTARG/PUTHGT,PUTANG,IPRPUT,ITAPUT
      COMMON   /PUTARG/PUTHGT,PUTANG,IPRPUT(2),ITAPUT
      COMMON    /ADJ3/ILCOR,JDCOR
      DIMENSION Z(IMAX,JMAX)
CCRAYb
	DIMENSION M(2)
CCRAYe
C
CHDS  DIMENSION IFF(5)
      CHARACTER*8 IFF(5)
      DIMENSION ITEXT(3),JTEXT(3)
      CHARACTER*12 CTEXT,HTEXT
      CHARACTER*4 LPLMI
CHDS  REAL*4  INDEF,IDEF,KDEF1,KDEF2,KDEF3,KDEF4
      REAL  INDEF,IDEF,KDEF1,KDEF2,KDEF3,KDEF4
      EQUIVALENCE (CTEXT,ITEXT(1))
      EQUIVALENCE (HTEXT,JTEXT(1))
      DATA  INDEF   /1.0E307 /
      DATA    ITEXT/3*0/
      IF(ITST.EQ.0) GO TO 7
      KCON4=30
      KCON5=40
      ICLOSE=0
C     ...WHERE KCON4 AND 5 ARE MIN DISTANCE (IN DOTS) FROM BEGINNING
C     ...OF ONE CONTOUR LABEL TO THE NEXT ON THE SAME J-ROW
C     ...TO PREVENT OVERPLOTTING
    7 CONTINUE
      KBEG=IX
      KLIM=IX+IUP
      IJFIX=JY
   10 Q=S*20.0
C     ...WHERE Q IS NO. OF TRIBYTES PER GRID INTERVAL
      REM=1.0
      Q1=1.0/(2.0*Q*Q)
      Q2=(Q+1.0)/2.0
      Q3=1.0/Q
      N=10
      KLAST=0
C     ...TO SEARCH FOR A GOOD DATA PT. TO START FROM...
      KSTART=KBEG
   15 DO 16 K=KBEG,KLIM
      IDEF=Z(K,IJFIX)
      IF(IDEF.NE.INDEF) GO TO 17
      KSTART=KSTART+1
   16 CONTINUE
      GO TO 500
  17  L=Z(KSTART,IJFIX)+10000.
      JCAL1=FLOAT(IJFIX-1)*Q*3.0+0.5
C     ...J(IN DOTS)=(GRID INT.)*(TRIBYTES/GRID INT.)*(3 DOTS/TRIBYTE)
      JCAL1=JCAL1+2*JDCOR+5
C     ...WHERE JCAL1 IS THE J (IN DOTS) OF LOWER LEFT OF FIRST CHAR
C     ...OF ANY CONTOUR LABEL FOR ALL LABELS ALONG FIXED J ROW..
   20 DO 200 K=KSTART,KLIM
      Q4=REM/2.0
      Q5=1.0-REM
      X=Q-Q5
      IINC=X
      REM=X-FLOAT(IINC)
      KCON7=FLOAT(K-1)*Q*3.0
C
C     ...CHECK FOR IMBEDDED GRID
C
   25 KDEF1=Z(K,IJFIX)
CHDS  KDEF2=Z(K+1,IJFIX)
CHDS  KDEF3=Z(K-1,IJFIX)
CHDS  KDEF4=Z(K+2,IJFIX)
Ccrayb
      IF (K.EQ.IMAX) THEN
            KDEF2=INDEF
      ELSE
            KDEF2=Z(K+1,IJFIX)
      ENDIF
      IF (K.EQ.1) THEN
            KDEF3 = INDEF
      ELSE
            KDEF3=Z(K-1,IJFIX)
      ENDIF
      IF (K.GE.IMAX) THEN
            KDEF4=INDEF
      ELSE
            KDEF4=Z(K+2,IJFIX)
      ENDIF
Ccraye
      YD2=0
      IF(KDEF1.EQ.INDEF) GO TO 31
      IF(KDEF2.EQ.INDEF) GO TO 31
      IF(KDEF3.EQ.INDEF) GO TO 31
      IF(KDEF4.EQ.INDEF) GO TO 31
      YD2=(Z(K+2,IJFIX)-Z(K+1,IJFIX)-Z(K,IJFIX)+Z(K-1,IJFIX))*Q1
   31 IF(KDEF1.EQ.INDEF) GO TO 200
      IF(KDEF2.EQ.INDEF) GO TO 200
      YD1=(Z(K+1,IJFIX)-Z(K,IJFIX))*Q3-(Q2*YD2)+Q5*YD2
      YVAL=Z(K,IJFIX)+Q5*Q4*YD1+10000.
C
C     ...BEGIN INNER LOOP
   35 DO 130 KK=1,IINC
      MM=YVAL
      IF((MM-L).EQ.0) GO TO 125
C
C     ...COMPUTE A LABEL
      XVAL=MM-10000
      IF((IABS(MM)-IABS(L)).LT.0) XVAL=L-10000
      KCON1=(KK-1)*3
      ICAL=KCON7+KCON1+ILCOR
C     ...THIS IS I-VALUE IN DOTS FOR PUTLAB
      HOLD = B * (XVAL + A)
      ITEXT(1) = SIGN((ABS(HOLD) + 0.05),HOLD)
      KPOSX=KCON4
      KAFOS=KCON5
   50 IF((ICAL-KLAST).LT.KPOSX) GO TO 125
      IF((ICAL-KLAST).LT.KAFOS) GO TO 150
CHDS  IPRPUT=0
      IPRPUT(1)=0
      IPRPUT(2)=0
      ICLOSE=0
      GO TO 160
  150 CONTINUE
      IF(ICLOSE.EQ.0) GO TO 151
      GO TO 152
  151 CONTINUE
CHDS  IPRPUT=1
      IPRPUT(1)=0
      IPRPUT(2)=1
      ICLOSE=1
      GO TO 160
  152 CONTINUE
CHDS  IPRPUT=0
      IPRPUT(1)=0
      IPRPUT(2)=0
      ICLOSE=0
  160 CONTINUE
      KLAST=ICAL
   55 CONTINUE
   75 CONTINUE
      INTG=ITEXT(1)
C     NCHAR=M
      NCHAR=M(2)
C
C     ...FORMAT STRIP LABEL FROM CENTER POSITION
C
   90 CONTINUE
      CALL BIN2EB(INTG,HTEXT,NCHAR,LPLMI(1:3))
   95 CONTINUE
      N=12
C     CALL ENCODE(ITEXT(1),N)
C     WRITE(99,IFF) JTEXT(1)
      WRITE(CTEXT(1:N),FMT=IFF) JTEXT(1)
      PRINT *,' INTG=',INTG,' ITEX=',ITEXT,' I=',ICAL,' J=',JCAL1
      CALL PUTLAB(ICAL,JCAL1,PUTHGT,ITEXT,PUTANG,N,IPRPUT,ITAPUT)
C
  125 L=MM
      YD1=YD1+YD2
      YVAL=YVAL+YD1
  130 CONTINUE
C     ...WHICH ENDS INNER LOOP ON KK
  200 CONTINUE
C     ...WHICH ENDS OUTER LOOP ON K
  500 RETURN
      END
