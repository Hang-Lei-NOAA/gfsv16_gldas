      SUBROUTINE PUTL_FM(LMT_NCACC,NCINACC,LOWACCTEX,ICOMMAND,
     A           KFONT,KROTAT,IPRIOR,IRET700)
C$$$  SUBPROGRAM DOCUMENTATION BLOCK
C                .      .    .                                       .
C SUBPROGRAM:    PUTL_FM     PUTLAB SUBR TO FORMAT FOR LABEL-ARRAY
C   PRGMMR: KRISHNA KUMAR        ORG: W/NP12    DATE: 1999-07-01
C
C ABSTRACT: CALLED ONLY FROM PUTLAB() TO FORMAT ONE LABEL-ARRAY
C   WORD-PAIR FROM THE GIVEN ACCUMULATED COMPONENTS.
C
C PROGRAM HISTORY LOG:
C   95-11-02  DAVID SHIMOMURA
C 1999-07-01  KRISHNA KUMAR    CONVERTED THIS CODE FROM CRAY TO
C                              IBM RS/6000.
C
C USAGE:    CALL PUTL_FM(LMT_NCACC,NCINACC,LOWACCTEX,ICOMMAND,
C                        KFONT,KROTAT,IPRIOR,IRET700)
C   INPUT ARGUMENT LIST:
C     LMT_NCACC - INT; LIMITING CAPACITY (NO. OF BYTES) IN LOWACCTEX
C     NCINACC   - INT; ACTUAL NO. OF DATA BYTES PASSED IN LOWACCTEX
C     LOWACCTEX - INT; ACCUMULATOR FOR TEXT; SHIFTED IN FROM LOW-END 
C     ICOMMAND  - INT; VALUE OF ICMD FROM PUTLAB CALL SEQ
C               =0;  THEN FORMAT LABEL(2,LABIX) WITH AN EXPLICIT 
C                         CHAR-SET INDEX FOLLOWED BY TEXT;
C               =1;  THEN FORMAT LABEL(2,LABIX) WITH NO CHAR-SET INDEX
C
C     KFONT     - INT; FONT_INDEX
C     KROTAT    - INT; VALUE OF ROTATION FROM KROT_PRI(1) OF PUTLAB()
C     IPRIOR    - INT; VALUE OF PRIORITY FROM KGOT_PRI(2) OF PUTLAB()
C                      (SEE DOCBLOCK OF PUTLAB())
C
C   INPUT VIA COMMON:
C     COMMON  /PUTWHERE/ IERPUT,LCKPT_PUT,LCKPRNQQ,
C                        IJPXL_GIVN(2),IJPXL_LBL(2),IJPXL_NEXCH(2),
C                        NCALLS_PUT,ICOUNT_FONT(MAXFONT)
C     
C     LCKPT_PUT - INT; CHECKPOINT LOCATION IN PUTLAB() FROM WHICH CALLED
C     LCKPRNQQ  - LOGICAL; WHETHER TO PRINT CHECKOUT REMARKS
C     IJPXL_LBL(2)   - INT; CONTAINING (IWORD,JWORD) -- THE PIXEL 
C                         LOCATION FOR THIS CURRENT LABEL-ARRAY ITEM;
C     IJPXL_NEXCH(2) - INT; CONTAINING (NEWI,NEWJ) -- THE PIXEL 
C                         LOCATION AFTER THIS LABEL-ARRAY ITEM IS
C                         PLOTTED;
C
C   OUTPUT ARGUMENT LIST:
C     IRET700   - RETURN CODE
C               =0;  NORMAL RETURN
C               =1;  FAILED FROM CALLING PUTL_WR() TO OUTPUT A BUFFER
C
C   OUTPUT VIA COMMON:
C     COMMON  /KPLOT/ LABEL(2,1024),LABIX,NOBUF,IDRA(50)
C
C     LABEL(1,LABIX+1) <= J-,I-WORD (+ ARROW-UP BIT + PRIORITY)
C     LABEL(2,LABIX+1) <= CHAR-SET-INDEX//TEXT//'$' (+ ROTATION)
C
C   OUTPUT FILES:
C     U:6 - INCLUDE IF ANY PRINTOUT
C
C REMARKS: LIST CAVEATS, OTHER HELPFUL HINTS OR INFORMATION
C     CALLS ON SUBR PUTL_WR() WHEN LABEL-ARRAY IS FULL
C
C ATTRIBUTES:
C   LANGUAGE: F90
C   MACHINE:  IBM
C$$$
C                                                 23-OCT-1995/DSS
C     ... ONLY CALLED FROM PUTLAB()
C     ... USED TO BE AN ASSIGNED GOTO SUBR 700 (RETURNED THRU KAERU)
C     ...TO FORMAT AND TRANSFER A PARTIALLY FULL ACC  TO LABEL ARRAY....
C     ... THIS VERSION FOR 32-BITS IN LOWER HALF OF LONG WORDS
C     ... GIVEN: IN LOWACCTEX IS ACCUMULATED TEXT SUBSTRING IN THE
C     ...           LOW-ORDER NCINACC-BYTES OF THE LONGWORD.
C
      INTEGER    LMAX
      PARAMETER (LMAX = 1024)
C ...      PARAMETER (LMAX = 64)  ... FOR CHECKOUT ONLY FOR SMALLER BIN
      INTEGER    LMAX2
      PARAMETER (LMAX2=LMAX*2)

      COMMON /KPLOT/  LABEL(2,LMAX),LABIX,NOBUF,IDRA(50)
C
      INTEGER      MAXFONT
      PARAMETER   (MAXFONT=63)
C     . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
      COMMON /PUTWHERE/ LBLTAP,IERPUT,LCKPT_PUT,LCKPRNQQ,
     1                  IJPXL_GIVN(2),IJPXL_LBL(2),IJPXL_NEXCH(2),
     2                  NCALLS_PUT,ICOUNT_FONT(MAXFONT)

      INTEGER      LBLTAP
      INTEGER      IERPUT
      INTEGER      LCKPT_PUT
      LOGICAL      LCKPRNQQ

      INTEGER      IWORD,JWORD
      EQUIVALENCE (IJPXL_LBL(1),IWORD)
      EQUIVALENCE (IJPXL_LBL(2),JWORD)

      INTEGER      NEWI,NEWJ
      EQUIVALENCE (IJPXL_NEXCH(1),NEWI)
      EQUIVALENCE (IJPXL_NEXCH(2),NEWJ)
C     . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .


      INTEGER    LMT_NCACC
      INTEGER    NCINACC
      INTEGER    LOWACCTEX
      INTEGER    ICOMMAND
      INTEGER    KFONT
      INTEGER    KROTAT

      INTEGER    IRET700
C     . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

C     ... TO DEFINE THE IDOLLAR() CONSTANTS FOR "$" TERMINATOR
C     ... POSITIONED AFTER N CHARACTERS WITHIN LABEL-ARRAY TXT INTEGER
C ...      INTEGER    IDOLL(4) 
C ...      DATA   IDOLL     / Z005B0000, Z00005B00, Z0000005B, 0/
      
      INTEGER  IDOLLAR(5)      		!... TERMINATING DOLLAR SIGN
      DATA     IDOLLAR     / 
     5                       X'00240000',
     6                       X'00002400',
     7                       X'00000024',
     8                       X'00000000',
     9                       X'00000000' /
      INTEGER   MSKNM1CH
      DATA      MSKNM1CH     / X'00FFFFFF' /
      INTEGER   MSKHIBYT
      DATA      MSKHIBYT     / X'FF000000' /
C
C ... INTEGER  IDOLLAR(9)      		!... TERMINATING DOLLAR SIGN
C ...      DATA     IDOLLAR     / X'0024000000000000',
C ...     2                       X'0000240000000000',
C ...     3                       X'0000002400000000',
C ...     4                       X'0000000024000000',
C ...     5                       X'0000000000240000',
C ...     6                       X'0000000000002400',
C ...     7                       X'0000000000000024',
C ...     8                       X'0000000000000000',
C ...     9                       X'0000000000000000' /
C ...      INTEGER   MSKNM1CH
C ...      DATA      MSKNM1CH     / X'00FFFFFFFFFFFFFF' /
C ...      INTEGER   MSKHIBYT
C ...      DATA      MSKHIBYT   / X'FF00000000000000' /

      INTEGER     MSK6BIT
      DATA        MSK6BIT       / X'0000003F' /
      INTEGER     MSK2BIT
      DATA        MSK2BIT       / X'00000003' /
      INTEGER     IARWUB          
      DATA        IARWUB        / X'00010000' /
C                                   12345678

      INTEGER     JACCTEX
      INTEGER     NCHIN
      INTEGER     IXFONT_HI
      INTEGER     JWORD_LHS
      INTEGER     LEFSHF
      INTEGER     IPRY13
      INTEGER     IAPC
      
      INTEGER     IAC3
      INTEGER     IACC
      INTEGER     MQ

      LOGICAL     LPACK_RAQ
      LOGICAL     LCLEAN_AFTQ
      INTEGER     IRET101
C
C     . . . . .   S T A R T   . . . . . . . . . . . . . . . . . . .

  700 CONTINUE
      IRET700 = 0
      NCHIN = NCINACC
      IF(NCHIN .LE. 0) THEN
C       ... JUMP OUT, DOING NOTHING, IF NOTHING IS GIVEN IN LOWACCTEX
        GO TO 999
      ELSE IF(NCHIN .GT. LMT_NCACC) THEN
        NCHIN = LMT_NCACC
      ENDIF
C     ... NOW THE CHAR COUNT (IN "NCHIN") = [1 TO LMT_NCACC] ...
C     ...       WHERE LMT_NCACC =  3 OR 4
      LSHFT = 8*(LMT_NCACC - NCHIN)
      JACCTEX = LOWACCTEX
      JACCTEX = ISHFT(JACCTEX,LSHFT)
C
      LEFSHF = 16 - 3
      ipry13 = ishft(IPRIOR,LEFSHF)

      IF(ICOMMAND .EQ. 0) THEN
C       ... LEAVE SPACE IN HIGH-ORDER BYTE FOR EXPLICIT 
C       ...    CHAR_SET_INDEX_NUMBER PRECEDING THE TEXT DATA BYTES 
        JACCTEX = IOR(JACCTEX,IDOLLAR(NCHIN + 1))
        JACCTEX = IAND(JACCTEX,MSKNM1CH)

        IACC = IAND(KFONT,MSK6BIT)
        MQ = IAND(KROTAT,MSK2BIT)
        MQ = ISHFT(MQ,6)
        IACC = IOR(MQ,IACC)
        LEFSHF = 8*LMT_NCACC
        IXFONT_HI = ISHFT(IACC,LEFSHF)
        JACCTEX = IOR(IXFONT_HI,JACCTEX)


        IAPC = IOR(IARWUB,IPRY13)  	!... INCLUDE ARROW-UP BIT

      ELSE
C       ... ICOMMAND .EQ. 1;  SO LEAVE NO SPACE FOR CHAR SET INDEX ...
        JACCTEX = IOR(JACCTEX,IDOLLAR(NCHIN))
        IAPC = IPRY13  			!... WITHOUT THE ARROW-UP BIT
      ENDIF
C
      IF(LABIX .GE. LMAX) THEN
C       ... I CANNOT INCREMENT LABIX WITHOUT EXCEEDING LIMIT, SO 
C       ... BUFFER OUT FULL LABEL BIN...
          LPACK_RAQ = .TRUE.
          LCLEAN_AFTQ = .TRUE.
          CALL PUTL_WR(LBLTAP,NOBUF,LABEL,LMAX2,LMAX,
     1                 LPACK_RAQ,LCLEAN_AFTQ,IRET101)

          IF(IRET101 .NE. 0) THEN
            IRET700 = 1
            GO TO 999
          ENDIF
          LABIX = 0
C       ...
      ENDIF
C
      IF(LCKPRNQQ) THEN
        WRITE(6,FMT='(1H ,''PUTL_FM:AT'',I5,''; LBL I,J=('', I7,
     1                    '','',I7,
     2                    ''); NEW I,J=('',I7,'','',I7,'')'')')
     A          LCKPT_PUT,IWORD,JWORD,NEWI,NEWJ
      ENDIF

      LABIX = LABIX + 1
      JWORD_LHS = ISHFT(JWORD,17)
      IAC3 = IOR(JWORD_LHS,IAPC)
      LABEL(1,LABIX) = IOR(IAC3,IWORD)
      LABEL(2,LABIX) = JACCTEX
C     ... THERE WENT THE DATA INTO THE LABEL-ARRAY ! ! ! ! ! 
C      
  999 CONTINUE
      RETURN
      END

