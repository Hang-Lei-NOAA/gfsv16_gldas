      SUBROUTINE PUTL_WR(LBLTAP,NOBUF,JARRAY,NWDGIVEN,NWDWRITE,
     1                   LPACK_RAQ,LCLEAN_AFTQ,IRET101)
C$$$  SUBPROGRAM DOCUMENTATION BLOCK
C                .      .    .                                       .
C SUBPROGRAM:    PUTL_WR     PUTLAB SUBR TO OUTPUT THE GIVEN ARRAY
C   PRGMMR: KRISHNA KUMAR      ORG: W/NP12   DATE: 1999-07-01
C
C ABSTRACT: CALLED ONLY FROM PUTLAB() TO WRITE THE GIVEN ARRAY 
C   (IN "JARRAY") TO UNIT=LBLTAP.  THIS WRITES SEQUENTIAL, UNFORMATTED 
C   RECORDS.  AND WILL CLEAR THE CONTENTS OF "JARRAY" AFTERWARDS 
C   IF REQUESTED.  THIS VERSION WILL PACK THE LOW-ORDER 32-BITS OF TWO 
C   ADJACENT  "JARRAY" WORDS INTO EACH 64-BIT WORD OF AN OUTPUT BUFFER 
C   (IF REQUESTED) BEFORE WRITING OUT; AND THE NUMBER OF WORDS TO BE 
C   WRITTEN OUT IS SPECIFIED IN "NWDWRITE".
C
C PROGRAM HISTORY LOG:
C   95-11-02  DAVID SHIMOMURA
C 1999-07-01  KRISHNA KUMAR    CONVERTED THIS CODE FROM CRAY TO 
C                              IBM RS/6000
C
C USAGE:    CALL PUTL_WR(LBLTAP,NOBUF,JARRAY,NWDGIVEN,NWDWRITE,
C                        LPACK_RAQ,LCLEAN_AFTQ,IRET101)
C   INPUT ARGUMENT LIST:  (SEE DOCBLOCK OF PUTLAB())
C     LBLTAP   - INT; OUTPUT FILE'S UNIT NUMBER (THE DSRN);
C     NOBUF    - INT; CURRENT COUNT OF RECORDS WRITTEN TO U:LBLTAP;
C     JARRAY   - INT; THE ARRAY TO BE PROCESSED AND WRITTEN TO U:LBLTAP;
C     NWDGIVEN - INT; WORD COUNT OF DATA IN JARRAY;
C     NWDWRITE - INT; OUTPUT RECORD SIZE (IN NO. OF WORDS);
C     LPACK_RAQ - LOGICAL; 
C              = .TRUE. -- THEN, HALF-PACK THE GIVEN JARRAY DATA
C                     BEFORE OUTPUTTING IT;
C     LCLEAN_AFTQ - LOGICAL; 
C              = .TRUE. -- THEN, ZERO THE JARRAY AFTER WRITING;
C
C
C   OUTPUT ARGUMENT LIST:
C     IRET101  - INT; RETURN CODE
C              =0;  NORMAL RETURN
C              =1;  ERROR RETURN FROM CALLING SUBR HAFPAKRA()
C              =-1; ERROR WHEN TRYING TO WRITE A RECORD TO UNIT=LBLTAP
C
C   OUTPUT FILES:
C     U:6 - FOR PRINTOUT IF ERROR CONDITION
C
C REMARKS: LIST CAVEATS, OTHER HELPFUL HINTS OR INFORMATION
C   EVERY INSTANCE OF PUTLAB'S WRITING TO LBLTAP (WHETHER IT IS WRITING 
C   THE IDENTIFIER RECORD, OR THE FULL LABEL-ARRAY, OR THE PARTIAL 
C   LABEL-ARRAY AT THE END) HAS BEEN CHANNELED THROUGH THIS 
C   SUB-SUBROUTINE.  THIS FACILITATES CHANGES TO THE I/O METHOD.
C
C     CALLS ON SUBR HAFPAKRA() TO PACK THE LOW-ORDER 32-BITS OF EACH
C        PAIR OF WORDS IN THE JARRAY INTO THE 64-BIT OUTPUT WORD.
C
C   ... CAUTION: THIS DOES NOT ZERO "LABIX", SINCE THIS DOES NOT
C                  KNOW THAT IT IS WORKING WITH THE LABEL ARRAY
C   ... CAUTION: THIS WILL WRITE THE NUMBER OF WORDS SPECIFIED
C                  IN "NWDWRITE"
C   ... CAUTION: THE UPPER LIMIT OF VALUE OF "NWDWRITE" IS SET
C                  AT 2*LMAX; WHERE LMAX=1024;
C                  I DO NOT EXPECT PUTLAB TO TRY TO WRITE ANY RECORD
C                  LARGER THAN THAT.
C
C ATTRIBUTES:
C   LANGUAGE: F90
C   MACHINE:  IBM
C
C$$$
C     ...  This version will use CRAY unformatted write to -s unblocked
C
C     . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  


      INTEGER    NBYTPWRD
      PARAMETER (NBYTPWRD=8)    	!... CRAY has 8-byte words

      INTEGER    LMAX
      PARAMETER (LMAX=1024)

      INTEGER    LMAX2
      PARAMETER (LMAX2=LMAX*2)

      INTEGER    CMAX2    		!... For dimension of C*1
      PARAMETER (CMAX2=LMAX2*NBYTPWRD)

      INTEGER    LBLTAP
      INTEGER    JARRAY(NWDGIVEN)
      INTEGER    NWDWRITE
      LOGICAL    LPACK_RAQ
      LOGICAL    LCLEAN_AFTQ
      INTEGER    IRET101


      INTEGER    NUMBYTS
      INTEGER    NBYTSWRIT
      INTEGER    IRET_WRS

      INTEGER    NWD_DEST
      INTEGER    IRET_HAF

      INTEGER      JOUTBUF(LMAX2)
      CHARACTER*1  COUTBUF(CMAX2)
      EQUIVALENCE (JOUTBUF(1),COUTBUF(1))

  101 CONTINUE
      IRET101 = 0

      IF(NWDGIVEN .LE. 0) THEN
        GO TO 999
C       ... WHICH EXITS WITH NOTHING DOING, IN CASE OF NO DATA GIVEN
      ENDIF
C
      IF(LPACK_RAQ) THEN
C       ... YES, PACK THE DATA ...
 
        CALL HAFPAKRA(JARRAY,NWDGIVEN,JOUTBUF,LMAX2,NWD_DEST,IRET_HAF)

        IF(IRET_HAF .NE. 0) THEN
          WRITE(6,FMT='(1H ,''PUTL_WR::HAFPAKRA FAILED. NWDGIVEN='',I6,
     1               ''; IRET_HAF='',I3)')
     A            NWDGIVEN,IRET_HAF

          IRET101 = 1
          GO TO 999
        ENDIF

C       ... DO I HAVE ENOUGH SPACE ALLOCATED IN JOUTBUF FOR NWDWRITE??
        IF(NWD_DEST .LT. NWDWRITE) THEN
          M1 = NWD_DEST + 1
          DO I = M1,NWDWRITE
            JOUTBUF(I) = 0
          ENDDO
        ENDIF
        GO TO 200

      ELSE
C       ... NO PACKING OF DATA WAS REQUESTED ...
C       ... WAS THE GIVEN DATA COUNT LESS THAN NWDWRITE???
        IF(NWDGIVEN .LT. NWDWRITE) THEN
          DO  I = 1,NWDGIVEN
            JOUTBUF(I) = JARRAY(I)
          ENDDO

          M1 = NWDGIVEN + 1
          DO  I = M1,NWDWRITE
            JOUTBUF(I) = 0
          ENDDO
          GO TO 200

        ELSE
C         ... (NWDGIVEN WAS .GE. NWDWRITE) ...
C         ...   SO I COULD WRITE DIRECTLY OUT OF THE JARRAY ...
C         ...   BUT, COPY INTO OUTPUT BUFFER, ANYWAY SO THAT
C         ...        THERE WILL BE ONLY ONE WRITE(LBLTAP, ...
C
          DO  I = 1,NWDWRITE
            JOUTBUF(I) = JARRAY(I)
          ENDDO
          GO TO 200
        ENDIF
      ENDIF
C

  200 CONTINUE

      WRITE(LBLTAP,ERR=920) (JOUTBUF(J),J=1,NWDWRITE)
   
      NOBUF = NOBUF + 1

      IF(LCLEAN_AFTQ) THEN
        DO  I = 1,NWDGIVEN
          JARRAY(I) = 0
        ENDDO
      ENDIF
      GO TO 999

C
  920 CONTINUE
      PRINT  925,LBLTAP,NOBUF
  925 FORMAT(1H ,'PUTL_WR:ERROR WRITING TAPE FT', I2, 
     1      /1H , 15X,'NOBUF =', I3)
      IRET101 = -1
      GO TO 999

C ...      GO TO JYES,(622,711,915)
C     ....END OF SUBROUTINE 101...
  999 CONTINUE
      RETURN
      END
