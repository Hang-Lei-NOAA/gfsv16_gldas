C$$$  SUBPROGRAM DOCUMENTATION BLOCK
C                .      .    .                                       .
C SUBPROGRAM:    BIN2EBCD    CONVERTS BINARY NUMBERS TO EBCDIC
C   PRGMMR: BOSTELMAN        ORG: W/NMC421   DATE: 96-05-23
C
C ABSTRACT: CONVERTS INTEGER QUANTITY ARRAY TO EBCDIC CHARACTERS
C           THE CHARACTER REPRESENTATION IS RIGHT JUSTIFIED AND
C           ZERO FILLED TO LEFT TO FILL IN THE STRING WIDTH. THE 
C           RESULT IS A CONTINUOUS BLOCK OF N1 STRINGS OF N2 WIDTH.
C
C PROGRAM HISTORY LOG:
C   96-05-23  W.J. BOSTELMAN
C
C USAGE:    CALL  BIN2EBCD (NUMBIN, KDATA, N1, N2, MINUS)
C
C   INPUT ARGUMENT LIST:
C    NUMBIN  = INTEGER QUANTITY (RANGE: 0 - 99999999)
C    N1      = NO. OF INTEGERS TO CONVERT
C    N2      = DESIRED LENGTH OF FINAL CHARACTER STRING, LEFT
C              JUSTIFIED. EXAMPLES: 'I2', 'I4', 'I10', WHERE 'I' IS
C        THE FORMAT TYPE SPECIFIER AND 'W' IS THE WIDTH (# OF DIGITS)
C    MINUS   = CHARACTER TO BE INSERTED IN HIGH ORDER POSITION OF A
C              NEGATIVE NUMBER FIELD
C
C   OUTPUT ARGUMENT LIST:
C    KDATA   = CONVERTED NUMERIC TO EBCDIC CHARACTER STRING.
C    NERR    = ZERO IF NO PROBLEMS,
C            = NONZERO IF ENCOUNTERS UNEXPECTED CHARACTER.
C
C ATTRIBUTES:
C   LANGUAGE: FORTRAN 77
C   MACHINE:  NAS
C
C$$$
C
      SUBROUTINE  BIN2EBCD (NUMBIN, KDATA, N1, N2, MINUS)
C
      PARAMETER     (MXLEN = 285)
      PARAMETER     (MXDIG = 8)
C
      CHARACTER*1    MINUS
      CHARACTER*3    IW (MXDIG)
      CHARACTER*3    NREPS
      CHARACTER*3    NREPX
      CHARACTER*20   FORMT
      CHARACTER*2280 KBUF
      CHARACTER*(*)  KDATA
C
      INTEGER       NUMBIN (MXLEN)
      INTEGER       NUMBINA(MXLEN)
C
      LOGICAL       NEGNUM (MXLEN), NEGATIVE
C
      DATA  IW /'1.1', '2.2', '3.3', '4.4', '5.5','6.6','7.7','8.8'/
C
      NERR     = 0
      IF (N2 .LE. MXDIG) THEN  ! >>> START PROCESSING
        NEGATIVE = .FALSE.
        NEGNUM   = .FALSE.
C
        DO I = 1, N1 !   >>>>> LOOK FOR NEGATIVES AND FLAG'M
          IF (NUMBIN(I) .LT. 0) THEN
            NUMBINA(I) =  IABS (NUMBIN(I))
            NEGNUM(I)  = .TRUE.
            NEGATIVE   = .TRUE.
          ELSE
            NUMBINA(I) = NUMBIN(I)
          ENDIF
        END DO
C
        WRITE (NREPS, '(I3)') N1    !  FORMAT REPETITION FACTOR
        FORMT  = '('//NREPS//'I'//IW(N2)//')'  ! CONVERSION FORMAT
        KBUF = ' '     ! CHARACTER BUFFER AREA
        WRITE (KBUF, FORMT) (NUMBINA(J),J=1,N1)  ! CONVERT NUMBERS
C
        IF (NEGATIVE) THEN
          DO I = 1, N1
            IF (NEGNUM(I)) THEN
              KBUF (N2*(I-1) + 1: N2*(I-1) + 1) = MINUS
            ENDIF
          END DO
        ENDIF
        KDATA(:N1*N2) = KBUF(:N1*N2)   ! PUT IN OUTPUT VARIABLE
C
      ELSE    ! >>>> DON'T PROCESS
        NERR = 12
        PRINT *, ' EXCEEDED NUMBER SIZE IN SUB BIN2EBCD, NERR = '
     &           , NERR
      ENDIF
C
      RETURN
      END
