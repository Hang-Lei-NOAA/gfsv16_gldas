#!/bin/ksh
#####################################################################
echo "------------------------------------------------"
echo "Storm Surge Forecast"
echo "------------------------------------------------"
echo "History: JULY 97 - First implementation of this new script."
echo "         MAY 98  - modify to correct an error in call to"
echo "                   snd2forgntbl.sh ."
echo "  31 AUG 2005 - Converted graphics from 6bit format to T4 format and"
echo "                rmoved snd2forgn processing."
echo "                         "
#####################################################################

cd $DATA
######################
# Set up Here Files.
######################

##########################################
#
# START FLOW OF CONTROL
#
# 1) Make COM dirs.
#
# 2) GENDATA - reads hourly dumps, extracts synoptic, buoy, ship
#    and METAR data. Creates an AFOS plotfile over the tropics and
#    midlatitudes between 50N and 50S.
#
# 3) REDSAT - extracts low level satellite winds from the GFS
#    prepbufr  file and creates a file to be used by program TRPSFCMV.
#
# 4) TRPSFCMV - Plots analyzed wind barbs and temperatures. Contours
#    the 100mb streamfunctions and plots gridded winds.  It uses
#    NCAR graphics to produce a metafile which is rasterized in 
#    subsequent program execution.
#
# 5) RAS2BITY - packs 8-bit color map pizels into 1-bit black and
#    white pixels of the second slice 40S - 40N.
#
# 6) SIXBITB2 - Reads station pixel coordinates and station wind,
#    temperture, dewpoint, cloud, weather, sky cover and barometer
#    data and plots standard plots on a generic bitmap background.
#
#########################################


########################################
set -x
msg="HAS BEGUN!"
postmsg "$jlogfile" "$msg"
########################################

set +x
echo " "
echo "######################################"
echo " Load SYNOP DATA "
echo "######################################"
echo " "
set -x

export FORM=$PDY$cyc
export TIME=$PDY

$DUMP $PDY$cyc 1.5  synop
export err=$?
if [ "$err" -ne 0 ]
then
   echo "###  No synop data for synop.${PDY}${cyc}! ###"
   echo "###  Stoping execution of GENDATA          ###"
    err_chk
fi

for TYPE in metar ships lcman mbuoy dbuoy
do
   cp ${COMINhrly}/$TYPE.$PDY$cyc.bufr $TYPE.$PDY$cyc

   if [ ! -f ${COMINhrly}/$TYPE.$PDY$cyc.bufr ]
   then
      $DUMP $PDY$cyc 0.5 $TYPE
   fi
done


export pgm=gendata
 . prep_step

export FORT11="synop.$PDY$cyc"
export FORT12="metar.$PDY$cyc"
export FORT13="ships.$PDY$cyc"
export FORT14="lcman.$PDY$cyc"
export FORT15="mbuoy.$PDY$cyc"
export FORT16="dbuoy.$PDY$cyc"
export FORT17="${UTILgfs}/fix/graph_pillist1"
export FORT52="NHPLOT"

 startmsg
${UTILgfs}/exec/gendata >> $pgmout <<EOF 2>errfile
$PDY$cyc
  50 -50  00 360 006 006
EOF
 export err=$?;err_chk

#########################################################
# Obtain satellite winds
#########################################################
cp $COMIN/gdas.$cycle.prepbufr gdas.$cycle.prepbufr

export pgm=redsat
 . prep_step

export FORT11="gdas.$cycle.prepbufr"
export FORT78="satwinds"

 startmsg
${UTILgfs}/exec/redsat >> $pgmout 2> errfile
 export err=$?;err_chk

#cp $COMIN/gdas.$cycle.pgrbf00   gdas.$cycle.tmppgrbf00
#$EXECutil/cnvgrib -g21 $COMIN/gdas.$cycle.pgrb2.1p00.f000 gdas.$cycle.pgrbf00
$CNVGRIB -g21 $COMIN/gdas.$cycle.pgrb2.1p00.f000 gdas.$cycle.pgrbf00
cp gdas.$cycle.pgrbf00 gdas.$cycle.tmppgrbf00
cp $COMIN/gdas.$cycle.syndata.tcvitals.tm00 tcvitals

#$EXECutil/copygb -xg3 gdas.$cycle.tmppgrbf00 gdas.$cycle.pgrbf00
#$EXECutil/grbindex gdas.$cycle.pgrbf00 gdas.$cycle.pgrbif00
$COPYGB  -xg3 gdas.$cycle.tmppgrbf00 gdas.$cycle.pgrbf00
$GRBINDEX gdas.$cycle.pgrbf00 gdas.$cycle.pgrbif00

export pgm=trpsfcmv
 . prep_step

### input files ###
export FORT11="gdas.${cycle}.pgrbf00"
export FORT12="gdas.${cycle}.pgrbif00"
export FORT38="satwinds"
export FORT31="tcvitals"
export FORT43="NHPLOT"

### output files unit ### i

export FORT44="afosplot"
export FORT74="HBULL"
export FORT87="afosplot"
export FORT88="f88"
export FORT89="f89"

filesize=`cat NHPLOT | wc -c`
echo $filesize >fsize_in

 startmsg

## JY - the following path need to change!!
#$EXECgraph/gdas_trpsfcmv <fsize_in >> $pgmout 2> errfile
$EXECgfs/gdas_trpsfcmv <fsize_in >> $pgmout 2> errfile
 export err=$?; err_chk


###########################################################
# Rasterize the map of the second slice 40S-40N
###########################################################
ictrans -d xwd  -fdn 2 -resolution 6912x1728 -e ' zoom   0.0 0.3755555 1.0 0.6255556   ' -e 'plot 1 ' gmeta >f11

###########################################################
# Pack 8 bit pixels into one bits of the first slice
###########################################################
export pgm=ras2bity
 . prep_step

export FORT11="f11"
export FORT59="f59"

fssize=`cat f11 | wc -c `
echo $fssize  >fin
echo 6912 >>fin
echo 1728 >>fin

 startmsg
${UTILgfs}/exec/ras2bity <fin >> $pgmout 2> errfile
 export err=$?;err_chk
#
###############################################################
# Set up the first input image with the header glued at the top
###############################################################
cat ${UTILgfs}/fix/graph_ras2bity.header f59 > f59_ras2bity1

cp f59_ras2bity1 image001.pur
cp image001.pur mapback.pur
cp mapback.pur image002.pur

###########################################################
# Make NCEP sixbitb map
###########################################################
export pgm=sixbitb2
 . prep_step

FAXOUT=tropic${cycle}"Z."${cyc}

export DTIME=`cat $DATA/fort.79`
cp f88 fort.13
cat ${UTILgfs}/fix/graph_sixbitb.trpsfcmv.all >> fort.13
cat >>fort.13 <<EOF
SHIFT 000020034600000
GULFT 0150001400 TROPICAL SURFACE ANAL. AND OBS.
GULFT  1520 1400 VALID   $DTIME
GULFT  1540 1400 STREAM FUNCTION FROM GFS  ANAL.
GULFT  1500 2400 TROPICAL SURFACE ANAL. AND OBS.
GULFT  1520 2400 VALID  $DTIME
GULFT  1540 2400 STREAM FUNCTION FROM GFS  ANAL.
GULFT  1500 6300 TROPICAL SURFACE ANAL. AND OBS.
GULFT  1520 6300 VALID   $DTIME
GULFT  1540 6300 STREAM FUNCTION FROM GFS  ANAL.
PUTLA 00520 4201 01.0 90.0 060 1 0 0  TROPICAL CYCLONE INFORMATION $DTIME
PUTLA 00620 6411 01.0 90.0 060 1 0 0  TROPICAL CYCLONE INFORMATION $DTIME
EOF
cat HBULL >> fort.13

################
#input files
################
export FORT12="mapback.pur"
export FORT13="fort.13"
export FORT15="${UTILgfs}/fix/graph_sixbitb.generic.f15"
export FORT18="${UTILgfs}/fix/graph_sixbitb.trpsfcmv.$cycle"
export FORT39="f89"
################
#scratch files
################
export FORT60="f60"
export FORT61="f61"
export FORT62="f62"
export FORT63="f63"
export FORT71="ras"
export FORT72="rs2"
export FORT52="x6b"
export FORT55="putlab.55"
################
#output file(s)
################
export FORT81="tropic${cycle}"Z."${cyc}"

 startmsg
${UTILgfs}/exec/sixbitb2 >> $pgmout 2>errfile
 export err=$?;err_chk

jobn=${model}_fax_${cyc}

 KEYW=GDTROP_g

 grep $KEYW ${UTILgfs}/fix/identifyfax.tbl | read Keyword sub00 sub06 sub12 sub18 gif toc prt lprt name

  if [ ${cyc} = '06' ]; then submn=$sub06; fi
  if [ ${cyc} = '18' ]; then submn=$sub18; fi

echo $FAXOUT $submn $name $Keyword $gif $toc $prt $jobn $lprt
export FAXOUT submn name Keyword gif toc prt jobn lprt
${UTILgfs}/ush/mk_graphics.sh


#####################################################################
# GOOD RUN
set +x
echo "**************JOB $job COMPLETED NORMALLY ON THE IBM SP"
echo "**************JOB $job COMPLETED NORMALLY ON THE IBM SP"
echo "**************JOB $job COMPLETED NORMALLY ON THE IBM SP"
set -x
#####################################################################

msg="HAS COMPLETED NORMALLY!"
postmsg "$jlogfile" "$msg"
############## END OF SCRIPT #######################
